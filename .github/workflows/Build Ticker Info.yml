name: Build Ticker Info

on:
  workflow_dispatch:
  schedule:
    - cron: "15 5 * * *"  # daily at 05:15 UTC

jobs:
  build-parts:
    strategy:
      fail-fast: false
      matrix:
        part_index: [0, 1]  # 2 partitions (was 4)
        part_total: [2]
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run builder (partition ${{ matrix.part_index }})
        run: |
          python scripts/build_ticker_info.py \
            --part-index ${{ matrix.part_index }} \
            --part-total ${{ matrix.part_total }} \
            --verbose

      - name: Partition summary → Step Summary
        run: |
          echo "### Partition ${{ matrix.part_index }} Summary" >> $GITHUB_STEP_SUMMARY
          python - <<'PYCODE'
          import json, os
          p = "data/partition_summary.json"
          if os.path.exists(p):
          with open(p) as f: s = json.load(f)
          lines = []
          for k in ["timestamp_utc","partition_index","partition_total","symbols_in_slice",
              "symbols_needing_update","batches_run","total_updated",
              "unresolved_after_run","entries_in_file","elapsed_seconds"]:
          lines.append(f"- **{k}**: {s.get(k)}")
          print("\n".join(lines))
        else:
          print("Partition summary missing.")
          PYCODE >> $GITHUB_STEP_SUMMARY

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ticker-info-part-${{ matrix.part_index }}
          path: |
            data/ticker_info.json
            data/partition_summary.json
            data/unresolved_tickers.txt
            logs/build_ticker_info.log

  merge:
    needs: build-parts
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Merge JSON parts
        run: |
          python - <<'PYCODE'
import json, glob, os
parts = glob.glob("artifacts/**/ticker_info.json", recursive=True)
merged = {}
def quality(info):
    s = info.get("sector","").lower()
    i = info.get("industry","").lower()
    return int(s not in ("","n/a","unknown") and i not in ("","n/a","unknown"))
for p in parts:
    with open(p) as f:
        data = json.load(f)
    for sym, rec in data.items():
        if sym not in merged:
            merged[sym] = rec
        else:
            if quality(rec["info"]) > quality(merged[sym]["info"]):
                merged[sym] = rec
os.makedirs("data", exist_ok=True)
with open("data/ticker_info.json","w") as f:
    json.dump(merged,f,indent=2,sort_keys=True)
print("Merged entries:", len(merged))
# Create global unresolved stats
unresolved = [s for s,v in merged.items()
              if v.get("info",{}).get("sector","").lower() in ("","n/a","unknown")
              or v.get("info",{}).get("industry","").lower() in ("","n/a","unknown")]
with open("data/global_unresolved.txt","w") as f:
    f.write("\n".join(sorted(unresolved)))
with open("data/global_summary.json","w") as f:
    json.dump({
        "merged_entries": len(merged),
        "unresolved_count": len(unresolved)
    }, f, indent=2)
PYCODE

      - name: Global summary → Step Summary
        run: |
          echo "## Global Ticker Info Summary" >> $GITHUB_STEP_SUMMARY
          python - <<'PYCODE'
import json
with open("data/global_summary.json") as f:
    g = json.load(f)
print(f"- **Merged entries**: {g['merged_entries']}")
print(f"- **Unresolved (missing or n/a)**: {g['unresolved_count']}")
PYCODE >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "<details><summary>Sample unresolved (first 25)</summary>" >> $GITHUB_STEP_SUMMARY
          head -25 data/global_unresolved.txt | sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          echo "</details>" >> $GITHUB_STEP_SUMMARY

      - name: Commit & Push (if changed)
        run: |
          if [[ -n "$(git status --porcelain data/ticker_info.json)" ]]; then
            git config user.name "github-actions"
            git config user.email "actions@users.noreply.github.com"
            git add data/ticker_info.json data/global_summary.json data/global_unresolved.txt
            git commit -m "Update ticker_info.json (auto merge)"
            git push
          else
            echo "No changes."
          fi

      - name: Upload merged artifact
        uses: actions/upload-artifact@v4
        with:
          name: ticker-info-merged
          path: |
            data/ticker_info.json
            data/global_summary.json
            data/global_unresolved.txt
