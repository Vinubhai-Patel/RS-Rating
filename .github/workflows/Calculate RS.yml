name: Calculate RS

on:
  schedule:
    - cron: "15 9 * * *"  # 05:15 AM EDT (09:15 UTC)
  workflow_dispatch:

jobs:
  fetch-rs-0:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Verify ticker_price.json
        run: |
          if [ ! -f data/ticker_price.json ]; then
            echo "Error: data/ticker_price.json not found"
            exit 1
          fi
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install yahooquery pandas numpy tqdm arcticdb
      - name: Verify calculate_rs.py checksum
        run: |
          echo "Expected SHA256: $(sha256sum scripts/calculate_rs.py)"
          if [ ! -f scripts/calculate_rs.py ]; then
            echo "Error: scripts/calculate_rs.py not found"
            exit 1
          fi
      - name: Verify calculate_rs.py arguments
        run: |
          python scripts/calculate_rs.py -h
      - name: Fetch data for partition 0
        run: |
          mkdir -p tmp/arctic_db
          mkdir -p logs
          rm -f logs/failed_tickers.log
          python scripts/calculate_rs.py data/ticker_price.json --log-file logs/failed_tickers.log --partition 0 --total-partitions 4
      - name: Upload ArcticDB data
        uses: actions/upload-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db/

  fetch-rs-1:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Verify ticker_price.json
        run: |
          if [ ! -f data/ticker_price.json ]; then
            echo "Error: data/ticker_price.json not found"
            exit 1
          fi
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install yahooquery pandas numpy tqdm arcticdb
      - name: Verify calculate_rs.py checksum
        run: |
          echo "Expected SHA256: $(sha256sum scripts/calculate_rs.py)"
          if [ ! -f scripts/calculate_rs.py ]; then
            echo "Error: scripts/calculate_rs.py not found"
            exit 1
          fi
      - name: Verify calculate_rs.py arguments
        run: |
          python scripts/calculate_rs.py -h
      - name: Fetch data for partition 1
        run: |
          mkdir -p tmp/arctic_db
          mkdir -p logs
          python scripts/calculate_rs.py data/ticker_price.json --log-file logs/failed_tickers.log --partition 1 --total-partitions 4
      - name: Upload ArcticDB data
        uses: actions/upload-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db/
          if-no-files-found: ignore  # Avoid failure if no new data

  fetch-rs-2:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Verify ticker_price.json
        run: |
          if [ ! -f data/ticker_price.json ]; then
            echo "Error: data/ticker_price.json not found"
            exit 1
          fi
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install yahooquery pandas numpy tqdm arcticdb
      - name: Verify calculate_rs.py checksum
        run: |
          echo "Expected SHA256: $(sha256sum scripts/calculate_rs.py)"
          if [ ! -f scripts/calculate_rs.py ]; then
            echo "Error: scripts/calculate_rs.py not found"
            exit 1
          fi
      - name: Verify calculate_rs.py arguments
        run: |
          python scripts/calculate_rs.py -h
      - name: Fetch data for partition 2
        run: |
          mkdir -p tmp/arctic_db
          mkdir -p logs
          python scripts/calculate_rs.py data/ticker_price.json --log-file logs/failed_tickers.log --partition 2 --total-partitions 4
      - name: Upload ArcticDB data
        uses: actions/upload-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db/
          if-no-files-found: ignore  # Avoid failure if no new data

  fetch-rs-3:
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Verify ticker_price.json
        run: |
          if [ ! -f data/ticker_price.json ]; then
            echo "Error: data/ticker_price.json not found"
            exit 1
          fi
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install yahooquery pandas numpy tqdm arcticdb
      - name: Verify calculate_rs.py checksum
        run: |
          echo "Expected SHA256: $(sha256sum scripts/calculate_rs.py)"
          if [ ! -f scripts/calculate_rs.py ]; then
            echo "Error: scripts/calculate_rs.py not found"
            exit 1
          fi
      - name: Verify calculate_rs.py arguments
        run: |
          python scripts/calculate_rs.py -h
      - name: Fetch data for partition 3
        run: |
          mkdir -p tmp/arctic_db
          mkdir -p logs
          python scripts/calculate_rs.py data/ticker_price.json --log-file logs/failed_tickers.log --partition 3 --total-partitions 4
      - name: Upload ArcticDB data
        uses: actions/upload-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db/
          if-no-files-found: ignore  # Avoid failure if no new data

  validate-arctic-data:
    needs: [fetch-rs-0, fetch-rs-1, fetch-rs-2, fetch-rs-3]
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download ArcticDB data
        uses: actions/download-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db
      - name: Remove lock file
        run: |
          find tmp/arctic_db -name "lock.mdb" -exec rm -f {} \;
      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          path: logs
          pattern: failed-tickers-*
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas numpy tqdm arcticdb
      - name: Validate ArcticDB data
        run: |
          mkdir -p logs
          python scripts/validate_arctic_data.py --log-file logs/failed_tickers.log

  calculate-rs:
    needs: validate-arctic-data
    runs-on: ubuntu-latest
    timeout-minutes: 120
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download ArcticDB data
        uses: actions/download-artifact@v4
        with:
          name: arctic-db
          path: tmp/arctic_db
      - name: Remove lock file
        run: |
          find tmp/arctic_db -name "lock.mdb" -exec rm -f {} \;
      - name: Download logs
        uses: actions/download-artifact@v4
        with:
          path: logs
          pattern: failed-tickers-*
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pandas numpy tqdm arcticdb
      - name: Calculate RS and generate CSVs
        run: |
          mkdir -p logs
          cat logs/failed-tickers-*/failed_tickers.log >> logs/failed_tickers.log
          python scripts/calculate_rs_from_db.py data/ticker_price.json --min-percentile 85 --reference-ticker SPY --output-dir data --log-file logs/failed_tickers.log
      - name: Archive rs_stocks.csv
        run: |
          mkdir -p archive
          current_date=$(date -u -d "4 hours ago" +"%m%d%Y")
          cp data/rs_stocks.csv archive/rs_stocks_${current_date}.csv
          find archive -type f -name "rs_stocks_*.csv" -mtime +90 -delete
      - name: Commit outputs
        run: |
          git config user.name "github-actions"
          git config user.email "actions@users.noreply.github.com"
          git add data/rs_stocks.csv data/rs_industries.csv data/RSRATING.csv logs/failed_tickers.log archive/rs_stocks_*.csv
          edt_time=$(date -u -d "4 hours ago" +"%I:%M %p EDT on %A, %B %d, %Y")
          git commit -m "Generate RS CSVs and archive rs_stocks_${current_date}.csv [${edt_time}]" || echo "No changes to commit"
          git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git || echo "Push failed"
      - name: Clean up
        run: |
          rm -rf tmp/*
