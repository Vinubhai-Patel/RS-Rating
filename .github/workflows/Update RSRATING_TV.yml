name: Update RSRATING_TV.CSV

on:
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * 1-5'  # Runs at 10:00 PM UTC (6:00 PM EST) Mon-Fri

jobs:
  update-rsrating:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          pip install pandas

      - name: Update RSRATING_TV.csv
        run: |
          python << 'EOF'
          import pandas as pd
          import datetime as dt

          input_file = "RS_Data/RSRATING.csv"
          output_file = "RS_Data/RSRATING_TV.csv"

          # NYSE holidays 2025
          nyse_holidays_2025 = {
              "2025-01-01", "2025-01-20", "2025-02-17", "2025-04-18",
              "2025-05-26", "2025-06-19", "2025-07-04", "2025-09-01",
              "2025-11-27", "2025-12-25"
          }

          # Read CSV
          df = pd.read_csv(input_file, sep=',', header=None)

          # Number of rows to fill
          num_rows = min(len(df), 35)

          # Generate trading days backwards from fixed date 2025-08-11
          end_date = dt.date(2025, 8, 11)
          trading_days = []
          current_date = end_date
          while len(trading_days) < num_rows:
              if current_date.weekday() < 5 and current_date.isoformat() not in nyse_holidays_2025:
                  date_str = current_date.strftime("%Y%m%d")
                  trading_days.append(date_str)
              current_date -= dt.timedelta(days=1)

          # Keep trading days in reverse order (newest to oldest)
          trading_days = trading_days

          # Add 'T' to the oldest trading day (last in the list)
          if trading_days:
              trading_days[-1] = trading_days[-1] + 'T'

          # Update the first column with trading days
          df.iloc[:num_rows, 0] = trading_days

          # Save file with tab separator to match desired output
          df.to_csv(output_file, sep='\t', index=False, header=False)
          print(f"Saved updated file to {output_file}")
          EOF

      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add RS_Data/RSRATING_TV.csv
          git commit -m "Auto-update RSRATING_TV.csv with last 35 trading days"
          git push
