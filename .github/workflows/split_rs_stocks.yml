name: Split rs_stocks.csv

# Controls when the workflow runs
on:
  workflow_dispatch: # Manual trigger
  workflow_run:
    workflows: ["ðŸ“Š Calculate RS Ratings"]
    types:
      - completed
    branches:
      - main

jobs:
  split-csv:
    name: Split rs_stocks.csv into chunks
    runs-on: ubuntu-latest
    # Only run if the Calculate RS Ratings workflow completed successfully
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch'

    steps:
      # Print workflow start time
      - name: Print workflow start time (EDT)
        run: |
          echo "Workflow started at $(date -u -d '4 hours ago' +'%I:%M %p EDT on %A, %B %d, %Y')"

      # Check out the repository to access rs_stocks.csv
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # Install dependencies
      - name: Install pandas
        run: pip install pandas

      - name: Delete existing split files
        run: |
          echo "Looking for old rs_stocks_part*.csv files in RS_Data/"
          files=$(find RS_Data -maxdepth 1 -type f -name "rs_stocks_part*.csv")
          if [ -z "$files" ]; then
            echo "No old split files found."
          else
            echo "Deleting the following files:"
            echo "$files"
          rm -f $files
          fi
          
      # Run Python script to split rs_stocks.csv
      - name: Split CSV file
        run: python scripts/split_rs_stocks.py

      # Commit and push the split files
      - name: Commit split files
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add RS_Data/rs_stocks_part*.csv
          git commit -m "Split rs_stocks.csv into 4000-record chunks [$(date -u -d '4 hours ago' +'%I:%M %p EDT on %A, %B %d, %Y')]"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Print workflow end time
      - name: Print workflow end time (EDT)
        run: |
          echo "Workflow ended at $(date -u -d '4 hours ago' +'%I:%M %p EDT on %A, %B %d, %Y')"
